version: '3.1'

networks:
 kong-net:
  driver: bridge

services:
   proxy:
     networks:
       - kong-net
     image: nginx:1.13.7
     ports:
       - "81:80"
     volumes:
       - ./proxy_site.conf:/etc/nginx/conf.d/default.conf

   web1:
     networks:
       - kong-net
     image: nginx:1.13.7
     ports:
       - "82:80"
     volumes:
       - ./html:/usr/share/nginx/html
       - ./conf:/etc/nginx/conf.d/
       - ./nginx.conf:/etc/nginx/nginx.conf
   ws:
    networks:
      - kong-net
    build: .
    ports:
      - 8010:8010

   kong-db:
     networks:
       - kong-net
     container_name: kong-db
     image: postgres:9.6
     environment:
       - POSTGRES_DB=kong
       - POSTGRES_USER=kong
       - POSTGRES_PASSWORD=kong
     healthcheck:
       test: ["CMD", "pg_isready", "-U", "postgres"]
       interval: 10s
       timeout: 5s
       retries: 5
     ports:
       - 5432:5432

   # once the docker-compose is up. need to execute it again if the first time migration is failed
   # then start api-kong again to make sure everything works well.
   kong-migration:
     networks:
      - kong-net
     container_name: kong-migrator
     image: kong:1.5
     restart: on-failure
     depends_on:
       - kong-db
     environment:
       - KONG_DATABASE=postgres
       - KONG_PG_HOST=kong-db
       - KONG_PG_DATABASE=kong
       - KONG_PG_USER=kong
       - KONG_PG_PASSWORD=kong
     command: kong migrations bootstrap 

   kong:
     networks:
      - kong-net
     container_name: kong
     image: kong:1.5
     depends_on:
       - kong-migration
       - kong-db
     environment:
       - KONG_DATABASE=postgres
       - KONG_PG_HOST=kong-db
       - KONG_PG_DATABASE=kong
       - KONG_PG_USER=kong
       - KONG_PG_PASSWORD=kong
       - KONG_PROXY_LISTEN=0.0.0.0:8000
      #  - KONG_PROXY_LISTEN_SSL=0.0.0.0:8443
       - KONG_ADMIN_LISTEN=0.0.0.0:8001
       - KONG_PROXY_ACCESS_LOG=/dev/stdout
       - KONG_ADMIN_ACCESS_LOG=/dev/stdout
       - KONG_PROXY_ERROR_LOG=/dev/stderr
       - KONG_ADMIN_ERROR_LOG=/dev/stderr
     ports:
       - 8000:8000
      #  - 8443:8443
       - 8001:8001
      #  - 8444:8444
     healthcheck:
       test: ["CMD", "curl", "-f", "http://kong:8001"]
       interval: 5s
       retries: 10
     restart: always
     ulimits:
       nproc: 65535
       nofile:
         soft: 20000
         hard: 40000

   konga:
     networks:
      - kong-net
     container_name: konga
     image: pantsel/konga:0.14.9
     restart: always
     ports:
       - 1338:1338
     environment:
       - NODE_ENV=jimcondition
       - DB_ADAPTER=postgres
       - DB_HOST=kong-db
       - DB_PORT=5432
       - DB_DATABASE=kong
       - DB_USER=kong
       - DB_PASSWORD=kong


