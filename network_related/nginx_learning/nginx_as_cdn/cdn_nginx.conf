#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    # tcp_nopush     on;
    # keepalive_timeout  0;
    keepalive_timeout  65;

    gzip  on;

    # set proxy cache with cdn module
    proxy_buffering               on;
    proxy_buffer_size             4k;
    proxy_buffers                 512 4k;
    proxy_busy_buffers_size       64k;
    proxy_temp_file_write_size    64k;
    proxy_cache_lock              on;
    proxy_cache_lock_timeout      200ms;

    proxy_temp_path               /tmp/proxy_temp;

    # keys_zone=cache:
    proxy_cache_path              /tmp/proxy_cache levels=1:2 keys_zone=cache:512m inactive=5m max_size=8g;


    proxy_connect_timeout        3s;
    proxy_read_timeout           5s;
    proxy_send_timeout           5s;

    server {
        listen       80;
        server_name  web;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
        
            proxy_pass_header Server;
           
            proxy_set_header Accept-Encoding '';
            proxy_redirect off;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Scheme $scheme;
            proxy_pass http://web;
            
            # below caching settle is to make sure keys_zone sync
            proxy_cache cache;
            proxy_cache_valid  200 304 365d;
            proxy_cache_key $host$uri$is_args$args;
            # 增加這個header可以更方便的判斷是否有命中CDN
            add_header X-Cache-Status $upstream_cache_status;
            expires max;
       
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
}
}
