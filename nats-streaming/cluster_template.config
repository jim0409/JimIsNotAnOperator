# client開啟的端口，提供外部做pub/sub
port: 4222

# 額外打開一個http監控端口(註: 如果有使用prometheus-exporter可以將此處註解)
# http_port: 8222

# cluster required
cluster {
  # 此nats-streaming server與其他server溝通的端口
  listen: 0.0.0.0:6222
  # 定義路由，表示該nats-streaming server與其他servers的溝通端口
  routes: [
    "nats-route://nats1:6221",
    "nats-route://nats3:6223",
  ]
}

# streaming 持久化
streaming {
  id: test # 表示streaming 的cluster id
  store: file # 將傳送的訊息以file的形式儲存下來
  dir: storeb # 儲存的資料夾位置
  cluster {
    node_id: "b" # 識別該儲存的 node_id
    peers: ["a", "c"] # 其他servers呼應的 node_id
  }
  # store options
  store_limits {
    max_channels: 0 # 不限制最大的 channel 數
    max_subs: 0 # 不限制最大的訂閱數
    max_msgs: 0 # 不限制在每個channel內的最大訊息量
    max_bytes: 0 # 不限制在每個channel內的訊息最大容量
    max_age: "24h" # 限制每個訊息在channel內的最大存在時間(預設持久不限)
    max_inactivity: "24h" # 當channel沒有任一的訂閱者時，能夠存在的最大時效
  }
}

# 設定驗證機制
authorization {
  user: "jim"
  pass: "password"
}

# pid file: store pid
pid_file: "nats_streaming.pid" # 將運行的pid檔存儲下來(註:nats-streaming server提供熱更新)

# logging options
debug:   false # 除錯模式，打印額外的[debug]功能 (註:這項功能會打印許多的額外日誌)
trace:   false ＃ 詳細記錄每次的錯誤 (註:這項功能會打印許多的額外日誌)
logtime: true # 針對每一筆送到nats-streaming server的訊息都會打印時間


